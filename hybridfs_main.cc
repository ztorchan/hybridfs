#include "hybridfs.h"

static struct fuse_operations hybridfs_operations = {
  .getattr = HybridFS::hfs_getattr,
  .readlink = HybridFS::hfs_readlink,
  .mknod = HybridFS::hfs_mknod,
  .mkdir = HybridFS::hfs_mkdir,
  .unlink = HybridFS::hfs_unlink,
  .rmdir = HybridFS::hfs_rmdir,
  .symlink = HybridFS::hfs_symlink,
  .rename = HybridFS::hfs_rename,
  .link = HybridFS::hfs_link,
  .chmod = HybridFS::hfs_chmod,
  .chown = HybridFS::hfs_chown,
  .truncate = HybridFS::hfs_truncate,
  .open = HybridFS::hfs_open,
  .read = HybridFS::hfs_read,
  .write = HybridFS::hfs_write,
  .statfs = HybridFS::hfs_statfs,
  .flush = HybridFS::hfs_flush,
  .release = HybridFS::hfs_release,
  .fsync = HybridFS::hfs_fsync,
  .setxattr = HybridFS::hfs_setxattr,
  .getxattr = HybridFS::hfs_getxattr,
  .listxattr = HybridFS::hfs_listxattr,
  .removexattr = HybridFS::hfs_removexattr,
  .opendir = HybridFS::hfs_opendir,
  .readdir = HybridFS::hfs_readdir,
  .releasedir = HybridFS::hfs_releasedir,
  .fsyncdir = HybridFS::hfs_fsyncdir,
  .init = HybridFS::hfs_init,
  .destroy = HybridFS::hfs_destroy,
  .access = HybridFS::hfs_access,
  .create = HybridFS::hfs_create,
  .lock = HybridFS::hfs_lock,
  .utimens = HybridFS::hfs_utimens,
  .bmap = HybridFS::hfs_bmap,
  .ioctl = HybridFS::hfs_ioctl,
  .poll = HybridFS::hfs_poll,
  .write_buf = HybridFS::hfs_write_buf,
  .read_buf = HybridFS::hfs_read_buf,
  .flock = HybridFS::hfs_flock,
  .fallocate = HybridFS::hfs_fallocate, 
  .copy_file_range = HybridFS::hfs_copy_file_range,
  .lseek = HybridFS::hfs_lseek
};

int main(int argc, char *argv[]) {
  return fuse_main(argc, argv, &hybridfs_operations, NULL);
}